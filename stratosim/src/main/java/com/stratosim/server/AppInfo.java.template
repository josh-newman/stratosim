package com.stratosim.server;

import org.apache.commons.codec.binary.Base64;

import com.google.appengine.api.utils.SystemProperty;
import com.stratosim.server.algorithm.XorStringFunction;

public final class AppInfo {
  // SOME OF THIS INFORMATION IS AUTOGENERATED BY THE VERSIONING SCRIPT.
  // DO NOT CHANGE THE FORMATTING WITHOUT UPDATING THE SCRIPT.
  
  // The Janrain API is used for SSO.
  public static final String JANRAIN_URL = "{{ janrain_url }}";
  public static final String JANRAIN_API_KEY = "{{ janrain_api_key }}";

  // The workers are used on EC2 to perform tasks involving binaries (simulation, pdf generation, graph generation, ...)
  public static final String WORKER_PRODUCTION_URL = "{{ prod.worker_url }}";
  public static final String WORKER_DEVELOPMENT_URL = "{{ dev.worker_url }}";
  // This key must by the same on the server in order to serve requests.
  public static final String WORKER_CLIENT_KEY = "{{ worker_client_key }}";

  // A signed cookie is used to identify users.
  // We could use sessions, but that would require more memcache / datastore operations, so we sacrifice
  // some security for cost.
  public static final String COOKIE_TOKEN_SALT = "{{ cookie_token_salt }}";
  public static final XorStringFunction COOKIE_ENCRYPT_FUNCTION = new XorStringFunction(
      Base64.decodeInteger(Base64.decodeBase64("{{ cookie_encrypt_key }}")));

  private AppInfo() {
    throw new UnsupportedOperationException("not instantiable");
  }

  public final static boolean isProduction() {
    return SystemProperty.environment.value() == SystemProperty.Environment.Value.Production;
  }
  
  public final static boolean isDevelopment() {
    return !isProduction();
  }

  public final static String getAppVersion() {
    String applicationVersion = SystemProperty.applicationVersion.get();
    String versionName = applicationVersion.substring(0, applicationVersion.indexOf("."));
    
    return versionName;
  }

}
